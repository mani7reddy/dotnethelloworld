name: Deploy DotNet HelloWorld to Azure Container App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ENVIRONMENT: dev
  LOCATION: East US
  IMAGE_NAME: ghcr.io/mani7reddy/dotnethelloworld:latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ---------------------------
      # 1Ô∏è‚É£ Checkout the repository
      # ---------------------------
      - name: Checkout Code
        uses: actions/checkout@v4

      # -------------------------------------
      # 2Ô∏è‚É£ Login to Azure using Service Principal
      # -------------------------------------
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      # ------------------------------------------------------
      # 3Ô∏è‚É£ Ensure required resource providers are registered
      # ------------------------------------------------------
      - name: Register required Azure resource providers
        run: |
          echo "üîç Checking provider registrations..."
          az provider register --namespace Microsoft.App || true
          az provider register --namespace Microsoft.OperationalInsights || true
          az provider register --namespace Microsoft.ContainerRegistry || true

          echo "‚è≥ Waiting 30 seconds for registration..."
          sleep 30

          echo "‚úÖ Registered providers:"
          az provider list --query "[?registrationState=='Registered'].{ProviderNamespace:namespace}" -o table

      # -----------------------------------
      # 4Ô∏è‚É£ Setup Terraform CLI
      # -----------------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # -----------------------------------
      # 5Ô∏è‚É£ Initialize Terraform
      # -----------------------------------
      - name: Terraform Init
        run: terraform init
        working-directory: infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------------
      # 6Ô∏è‚É£ Terraform Apply (Deploy)
      # -----------------------------------
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="environment=$ENVIRONMENT" \
            -var="location=$LOCATION" \
            -var="image_name=$IMAGE_NAME"
        working-directory: infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------------
      # 7Ô∏è‚É£ Capture the App URL Output
      # -----------------------------------
      - name: Get App URL
        run: terraform output -raw app_url > app_url.txt
        working-directory: infra

      # -----------------------------------
      # 8Ô∏è‚É£ Display the deployed App URL
      # -----------------------------------
      - name: Show App URL
        run: |
          echo "üåç Deployed App URL:"
          cat infra/app_url.txt
