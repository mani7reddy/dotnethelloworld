name: Deploy DotNet HelloWorld to Azure Container App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ENVIRONMENT: dev
  LOCATION: East US
  IMAGE_NAME: ghcr.io/mani7reddy/dotnethelloworld:latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -----------------------------
      # üß© Checkout Code
      # -----------------------------
      - name: Checkout Code
        uses: actions/checkout@v4

      # -----------------------------
      # üîê Azure Login
      # -----------------------------
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      # -----------------------------
      # üèóÔ∏è Register Required Azure Providers
      # -----------------------------
      - name: Register Azure Providers
        run: |
          az provider register --namespace Microsoft.App --wait || true
          az provider register --namespace Microsoft.OperationalInsights --wait || true
          az provider register --namespace Microsoft.ContainerRegistry --wait || true

      # -----------------------------
      # ‚öôÔ∏è Setup Terraform
      # -----------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # -----------------------------
      # üîì Force Unlock if locked
      # -----------------------------
      - name: Force Unlock Terraform State (Safe)
        working-directory: infra
        run: |
          echo "üîç Checking for Terraform state locks..."
          terraform force-unlock -force 87baccc5-4b9b-5f6c-d8e0-49866f46602f || echo "‚úÖ No lock found, continuing..."
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üíæ Terraform Init + Import Existing Azure Resources
      # -----------------------------
      - name: Terraform Init and Import Existing Resources
        working-directory: infra
        run: |
          terraform init -input=false -reconfigure

          RG_NAME="rg-dotnet-dev"
          RG_ID="/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RG_NAME"
          LAW_NAME="log-dev"
          ENV_NAME="env-dev"
          APP_NAME="dotnethelloworld-dev"

          # Import Resource Group
          terraform state show module.rg.azurerm_resource_group.rg >/dev/null 2>&1 || \
          terraform import module.rg.azurerm_resource_group.rg "$RG_ID" || true

          # Import Log Analytics Workspace
          terraform state show module.container_app.azurerm_log_analytics_workspace.law >/dev/null 2>&1 || \
          terraform import module.container_app.azurerm_log_analytics_workspace.law \
          "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RG_NAME/providers/Microsoft.OperationalInsights/workspaces/$LAW_NAME" || true

          # Import Container App Environment
          terraform state show module.container_app.azurerm_container_app_environment.env >/dev/null 2>&1 || \
          terraform import module.container_app.azurerm_container_app_environment.env \
          "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RG_NAME/providers/Microsoft.App/managedEnvironments/$ENV_NAME" || true

          # Import Container App
          terraform state show module.container_app.azurerm_container_app.app >/dev/null 2>&1 || \
          terraform import module.container_app.azurerm_container_app.app \
          "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RG_NAME/providers/Microsoft.App/containerApps/$APP_NAME" || true
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üìã Terraform Plan
      # -----------------------------
      - name: Terraform Plan
        working-directory: infra
        run: |
          terraform plan -lock=false -input=false \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="location=${{ env.LOCATION }}" \
            -var="image_name=${{ env.IMAGE_NAME }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üöÄ Terraform Apply
      # -----------------------------
      - name: Terraform Apply
        working-directory: infra
        run: |
          terraform apply -lock=false -auto-approve \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="location=${{ env.LOCATION }}" \
            -var="image_name=${{ env.IMAGE_NAME }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üåç Output Application URL
      # -----------------------------
      - name: Get App URL
        working-directory: infra
        run: terraform output -raw app_url > app_url.txt
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Show App URL
        run: |
          echo "üåç Your App is Live at:"
          cat infra/app_url.txt
