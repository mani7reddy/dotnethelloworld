name: Build, Deploy, and Destroy DotNet HelloWorld to Azure Container App

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose an action: deploy or destroy'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

env:
  ENVIRONMENT: dev
  LOCATION: East US
  IMAGE_NAME: ghcr.io/mani7reddy/dotnethelloworld:latest

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'deploy' || github.event_name == 'push' }}
    timeout-minutes: 30

    steps:
      # -----------------------------
      # üß© Checkout Code
      # -----------------------------
      - name: Checkout Code
        uses: actions/checkout@v4

      # -----------------------------
      # üê≥ Build & Push Docker Image
      # -----------------------------
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          no-cache: true
          platforms: linux/amd64

      # -----------------------------
      # üîê Azure Login
      # -----------------------------
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      # -----------------------------
      # ‚öôÔ∏è Setup Terraform
      # -----------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # -----------------------------
      # üíæ Terraform Init
      # -----------------------------
      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false -reconfigure
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üìã Terraform Plan
      # -----------------------------
      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -lock=false -input=false \
          -var="environment=${{ env.ENVIRONMENT }}" \
          -var="location=${{ env.LOCATION }}" \
          -var="image_name=${{ env.IMAGE_NAME }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üöÄ Terraform Apply
      # -----------------------------
      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -lock=false \
          -var="environment=${{ env.ENVIRONMENT }}" \
          -var="location=${{ env.LOCATION }}" \
          -var="image_name=${{ env.IMAGE_NAME }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # -----------------------------
      # üåç Output Application URL
      # -----------------------------
      - name: Show App URL
        working-directory: infra
        run: |
          echo "üåç Application URL:"
          terraform output -raw app_url || echo "‚ö†Ô∏è No output found."
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false -reconfigure
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Destroy
        working-directory: infra
        run: terraform destroy -auto-approve -lock=false \
          -var="environment=${{ env.ENVIRONMENT }}" \
          -var="location=${{ env.LOCATION }}" \
          -var="image_name=${{ env.IMAGE_NAME }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
